[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ravyn"
description = "Ravyn combines performance, type safety, and elegance. A next-generation async Python framework for APIs, microservices, and web applications."
long_description = """
Ravyn is a next-generation async Python web framework built on ASGI, designed for high performance,
scalability, and clean architecture. It offers modern features such as dependency injection,
AOP-style interceptors, background tasks, WebSockets, GraphQL, OpenAPI support, and more. All with
a focus on developer experience and type safety.

If you love modern frameworks, you'll feel right at home, but faster, cleaner, and built for the future.
"""
readme = "README.md"
requires-python = ">=3.10"
dynamic = ['version']
authors = [{ name = "Tiago Silva", email = "tiago.silva@dymmond.com" }]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: AnyIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]
dependencies = [
    "lilya[standard]>=0.20.8",
    "pydantic-settings>=2.9.0",
    "orjson>=3.8.5,<4.0.0",
    "msgspec>=0.18.5,<1.0.0",
    "monkay>=0.5.0"
]
keywords = [
    # Core web framework
    "python",
    "python3",
    "asyncio",
    "asgi",
    "web",
    "web-framework",
    "api",
    "rest",
    "rest-api",
    "http",
    "openapi",
    "swagger",
    "redoc",
    "openapi3",
    "websocket",
    "graphql",
    "json",
    "cors",
    "csrf",
    "dependency-injection",
    "routing",
    "controllers",
    "validation",
    "serialization",
    "pydantic",
    "data-validation",

    # Performance & async
    "high-performance",
    "concurrency",
    "async",
    "async-framework",
    "non-blocking",
    "event-driven",
    "uvicorn",
    "hypercorn",
    "anyio",

    # Framework integrations
    "starlette",
    "lilya",
    "esmerald",
    "fastapi",
    "aiohttp",
    "flask",
    "django",
    "quart",

    # Architecture & features
    "openapi-schema",
    "typed-api",
    "type-hints",
    "python-types",
    "autodoc",
    "auto-documentation",
    "request-handling",
    "response-models",
    "middlewares",
    "interceptors",
    "aop",
    "exception-handling",
    "background-tasks",
    "caching",
    "observables",
    "sse",
    "streaming",
    "graphql-support",

    # Use cases
    "backend",
    "api-server",
    "microservices",
    "machine-learning",
    "ml",
    "ai",
    "security",
    "authentication",
    "oauth2",
    "jwt",
    "api-key",
    "websocket-server",
    "cloud-native",
    "modern-python",
    "developer-friendly",

    # Branding
    "ravyn",
    "ravyn-framework",
    "dymmond",
]


[project.urls]
Homepage = "https://github.com/dymmond/ravyn"
Documentation = "https://ravyn.dymmond.com/"
Changelog = "https://ravyn.dymmond.com/release-notes/"
Funding = "https://github.com/sponsors/tarsil"
Source = "https://github.com/dymmond/ravyn"

[project.optional-dependencies]
test = ["httpx>=0.25.0"]
dev = [
    # includes watchfiles
    "uvicorn[standard]>=0.37.0",
]

standard = [
    # For WSGI support
    "a2wsgi",
    # For the Email type
    "email-validator>=2.2.0,<3.0.0",
    # For the sessions middleware
    "itsdangerous>=2.1.2,<3.0.0",
    # For template rendering
    "jinja2>=3.1.2,<4.0.0",
    # For client testing
    "httpx>=0.25.0,<0.30.0",
    # For static files serving
    "uvicorn[standard]>=0.37.0",
]

jwt = [
    # For password hashing
    "bcrypt>=4.3.0",
    # For JWT token handling
    "pyjwt>=2.10.1,<3",
]
schedulers = [
    # For task scheduling
    "asyncz>=0.11.0",
]

all = [
    # All optional dependencies
    "ravyn[standard,test,jwt,schedulers]",
    # For password hashing
    "ipython",
    # For interactive Python shells
    "ptpython",
    # For WSGI support
    "a2wsgi",
]

testing = [
    "redis",
    "anyio[trio]>=3.6.2,<5.0.0",
    "brotli>=1.0.9,<2.0.0",
    "edgy[postgres]>=0.31.3",
    "databasez>=0.9.7",
    "fakeredis>=2.27.0",
    "flask>=1.1.2,<4.0.0",
    "freezegun>=1.2.2,<2.0.0",
    "grpcio-tools>=1.71.0",
    "mongoz>=0.6.0",
    "mypy==1.18.2",
    "pytest>=7.1.3,<9.0.0",
    "pytest-cov>=4.1.0,<8.0.0",
    "pytest-asyncio>=0.26.0",
    "polyfactory>=2.5.0,<3.0.0",
    "pytz",
    "ujson>=5.7.0,<6",
    "loguru>=0.7.0,<0.8.0",
    "structlog>=25.2.0",
    "ipdb",
    "types-ujson==5.10.0.20250822",
    "types-orjson==3.6.2",
]

docs = [
    "a2wsgi>=1.9.0",
    "httpx>=0.25.0",
    "lilya[standard]>=0.20.8",
    "griffe-typingdoc>=0.2.2,<1.0",
    "mkdocs>=1.1.2,<2.0.0",
    "mkdocs-material>=9.4.4",
    "mdx-include>=1.4.2",
    "mkdocs-macros-plugin>=0.4.0",
    "mkdocs-meta-descriptions-plugin>=2.3.0",
    "mkdocstrings[python]>=0.23.0",
    "pyyaml>=6.0,<7.0.0",
    "typing_extensions>=3.10.0",
]

[tool.hatch.envs.default]
dependencies = ["ruff", "pre-commit>=4.2.0,<5.0.0", "twine"]

[tool.hatch.envs.default.scripts]
clean_pyc = "find . -type f -name \"*.pyc\" -delete"
clean_pyi = "find . -type f -name \"*.pyi\" -delete"
clean_pycache = "find . -type d -name \"*__pycache__*\" -delete"
build_with_check = "hatch build; twine check dist/*"
lint = "hatch fmt ravyn tests docs_src {args}; hatch run test:check_types"
format = "hatch fmt && hatch fmt --check && hatch run test:check_types"

[tool.hatch.envs.docs]
features = ["all", "docs"]

[tool.hatch.envs.docs.scripts]
update_languages = "scripts/docs.py update-languages"
build = "hatch run docs:update_languages; scripts/docs.py build-all"
build_lang = "hatch run docs:update_languages; scripts/docs.py build --lang {args}"
serve = "hatch run docs:update_languages; scripts/docs.py live"
dev = "hatch run docs:update_languages; scripts/docs.py serve"
serve_lang = "hatch run docs:update_languages; scripts/docs.py live --lang {args}"
new_lang = "hatch run docs:update_languages; scripts/docs.py new-lang --lang {args}"

[tool.hatch.envs.test]
features = ["all", "testing"]

[tool.hatch.envs.test.scripts]
# needs docker services running
test = "hatch test -- {args}"
test_man = "hatch test -- {args} -s -vv"
coverage = "hatch test -- --cov=ravyn --cov=tests --cov-report=term-missing:skip-covered --cov-report=html tests {args}"
check_types = "mypy -p ravyn"

#[[tool.hatch.envs.hatch-test.matrix]]
#python = ["3.9", "3.10", "3.11", "3.12", "3.13"]
#python = ["3.11"]

[tool.hatch.envs.hatch-test]
features = ["all", "testing"]
template = "test"
installer = "pip"

[tool.hatch.envs.hatch-test.env-vars]
RAVYN_SETTINGS_MODULE = "tests.settings.TestSettings"

[tool.hatch.envs.hatch-static-analysis]
# disables custom ruff rules, required to align with pre-commit
config-path = "none"
dependencies = ["ruff==0.12.2"]

[tool.hatch.version]
path = "ravyn/__init__.py"

[project.scripts]
ravyn = "ravyn.__main__:run_cli"

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.isort]
profile = "black"
known_third_party = ["ravyn", "pydantic", "msgspec", "lilya"]

[tool.mypy]
strict = true
warn_unused_configs = true
warn_unreachable = true
warn_return_any = true
disallow_untyped_decorators = true
disallow_any_generics = false
implicit_reexport = false
show_error_codes = true
disallow_incomplete_defs = true
disable_error_code = [
    "attr-defined",
    "has-type",
    "override",
    "safe-super",
    "misc",
    "union-attr",
]
exclude = "ravyn/conf,ravyn/utils"
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = false
strict_equality = false
strict_optional = false

[tool.ruff]
line-length = 99

[tool.ruff.lint]
select = ["E", "W", "F", "C", "B", "I"]
ignore = ["E501", "B008", "C901", "B026"]

exclude = ["docs_src/*"]

[tool.coverage.run]
parallel = true
context = '${CONTEXT}'
source = ["tests", "ravyn"]
omit = [
    "ravyn/__main__.py",
    "ravyn/conf/__init__.py",
    "ravyn/middleware/errors.py",
    "ravyn/permissions/base.py",
    "ravyn/core/directives/*",
    "ravyn/core/terminal/*",
    "ravyn/datastructures/types.py",
    "ravyn/types.py",
    "ravyn/contrib/*",
    "ravyn/openapi/openapi.py",
    "ravyn/openapi/security/*",
    "tests/databases/edgy/*",
    "tests/utils/functional.py",
    "tests/cli/*",
]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true
ignore_errors = true

[[tool.mypy.overrides]]
module = "docs_src.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "multipart.*",
    "sqlalchemy.*",
    "sqlalchemy_utils.*",
    "slugify.*",
    "pytz",
    "pyjwt.*",
    "bcrypt.*",
    "ravyn.contrib.auth.edgy.*",
    "grpc.*",
    "google.*",
]
ignore_missing_imports = true
ignore_errors = true

[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers"]
xfail_strict = true
junit_family = "xunit2"


[tool.hatch.build.targets.sdist]
include = ["/ravyn"]
